{{ stimulus_js_load_start('publicController', first_load is defined and first_load) }}

let points = [];
{% for diaryEntry in diaryEntries %}
publicController.addDiaryEntry(
  '{{ diaryEntry.id }}',
  '{{ diaryEntry.point.lat }}',
  '{{ diaryEntry.point.lon }}',
  '{{ diaryEntry.symbol }}'
);
points.push([{{ diaryEntry.point.lat }}, {{ diaryEntry.point.lon }}]);
publicController.showDiaryFromUrl();
{% endfor %}

{% for routing in routings %}
points.push([{{ routing.startStage.point.lat }}, {{ routing.startStage.point.lon }}]);
points.push([{{ routing.finishStage.point.lat }}, {{ routing.finishStage.point.lon }}]);
mapCommonController.addPath(
  {{ routing.pathPoints|json_encode|raw }},
  {{ routing.startStage.id }},
  {{ routing.distance|default('null') }}
);
{% endfor %}
{% if trip.progressPoint %}
mapCommonController.addProgress(
    ['{{ trip.progressPoint.lat }}', '{{ trip.progressPoint.lon }}'],
{% for routing in routings %}
{% if routing.pathPoints and routing.pathPoints|length > 1 %}
    {{ routing.pathPoints|json_encode|raw }},
{% endif %}
{% endfor %}
);
{% endif %}

mapCommonController.refreshPlan();
publicController.fit(points);

{{ stimulus_js_load_end(first_load is defined and first_load) }}
