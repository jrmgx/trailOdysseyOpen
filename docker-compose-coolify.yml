volumes:
    trailodyssey-data: {}
    trailodyssey-sessions: {}
    trailodyssey-postgresql-data: {}
    trailodyssey-backup: {}

services:
    php-fpm:
        build:
            context: .
            dockerfile: docker/php-fpm/Dockerfile
            target: copy
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - "trailodyssey-data:/var/www/var/data"
            - "trailodyssey-sessions:/var/www/var/sessions"
            - "/data/docker/volumes/trailodyssey-backup:/backup"
            - "/data/docker/volumes/trailodyssey-uploads:/var/www/public/uploads"
            - "./docker/php-fpm/etc/ImageMagick-6:/etc/ImageMagick-6"
            - "./docker/php-fpm/usr/local/etc:/usr/local/etc"
            - "./docker/php-fpm/nginx.conf:/etc/nginx/nginx.conf"
        environment:
            - IN_BUILDER=1
            - APP_ENV=${APP_ENV:-prod}
            - APP_SECRET=${APP_SECRET}
            - DATABASE_URL=${DATABASE_URL}
            - DEPLOY=${DEPLOY:-prod}
            - GOOGLE_MAP_KEY=${GOOGLE_MAP_KEY}
            - INSTANCE_OPEN=${INSTANCE_OPEN:-false}
            - MAILER_DSN=${MAILER_DSN:-null://null}
            - MAINTENANCE=${MAINTENANCE:-false}
            - MAPBOX_KEY=${MAPBOX_KEY}
            - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN:-doctrine://default?auto_setup=0}
            - PROJECT_BASE_URL=${PROJECT_BASE_URL:-https://trailodyssey.net}
            - PROJECT_HOST=${PROJECT_HOST:-trailodyssey.net}
            - REDIS_HOST_DSN=${REDIS_HOST_DSN}
            - SYMFONY_FRAMEWORK_IDE=${SYMFONY_FRAMEWORK_IDE:-null://}
            - MASTODON_INSTANCES=${MASTODON_INSTANCES}
            - MASTODON_CLIENT_KEYS=${MASTODON_CLIENT_KEYS}
            - MASTODON_CLIENT_SECRETS=${MASTODON_CLIENT_SECRETS}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PORT=${POSTGRES_PORT}

    postgres:
        build: docker/postgres
        volumes:
            - "trailodyssey-postgresql-data:/var/lib/postgresql/data"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
            - PGPORT=${POSTGRES_PORT}
